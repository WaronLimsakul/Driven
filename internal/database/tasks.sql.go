// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tasks.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createTask = `-- name: CreateTask :one
INSERT INTO tasks (
    id,
    owner_id,
    name,
    date,
    priority
) VALUES ($1, $2, $3, $4, $5) -- skip date and time focus
RETURNING id, owner_id, name, keys, date, priority, isdone, time_focus
`

type CreateTaskParams struct {
	ID       uuid.UUID
	OwnerID  uuid.UUID
	Name     string
	Date     time.Time
	Priority int32
}

func (q *Queries) CreateTask(ctx context.Context, arg CreateTaskParams) (Task, error) {
	row := q.db.QueryRowContext(ctx, createTask,
		arg.ID,
		arg.OwnerID,
		arg.Name,
		arg.Date,
		arg.Priority,
	)
	var i Task
	err := row.Scan(
		&i.ID,
		&i.OwnerID,
		&i.Name,
		&i.Keys,
		&i.Date,
		&i.Priority,
		&i.Isdone,
		&i.TimeFocus,
	)
	return i, err
}
