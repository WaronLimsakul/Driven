package templates

import (
	"github.com/WaronLimsakul/Driven/internal/database"
	taskpkg "github.com/WaronLimsakul/Driven/internal/task"
	"time"
	"fmt"
)


var weekDays [7]string = [7]string{"Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"}

func dateFormatWeek(date time.Time) string {
	return fmt.Sprintf("%d/%d", date.Day(), date.Month())
}

templ Week(groupTasks [][]database.Task, monday time.Time) {
	<div id="calendar" class="m-3 mr-5 p-4 flex bg-flame-surface rounded-lg h-full">
		<button
			class="m-2 cursor-pointer rounded-full p-2 hover:bg-gray-700 flex items-center justify-center h-10 w-10 transition-colors"
			hx-get={ fmt.Sprintf("/week/%s", dateFormat(monday.Add(-7 * 24 * time.Hour))) }
			hx-target="#calendar"
			hx-swap="outerHTML"
		>
			<span class="text-lg font-semibold">&lt</span>
		</button>
		<div class="grid grid-cols-7 auto-rows-min gap-2 h-full w-full">
	            for i, formattedDate := range taskpkg.SpanWeekDate(monday, dateFormatWeek) {
	            	<div class="text-center h-8 font-bold mb-3 row-span-2">
	               		{ weekDays[i] } <br/> { formattedDate }
	             	</div>
	            }

	            for i, day := range weekDays {
				    @SmallTasksColumn(groupTasks[i], day)
	            }
	    </div>
		<button
			class="m-2 cursor-pointer rounded-full p-2 hover:bg-gray-700 flex items-center justify-center h-10 w-10 transition-colors"
			hx-get={ fmt.Sprintf("/week/%s", dateFormat(monday.Add(7 * 24 * time.Hour))) }
			hx-target="#calendar"
			hx-swap="outerHTML"
		>
			<span class="text-lg font-semibold">&gt</span>
		</button>
	</div>
    @NewTaskFormWeek(time.Now())
}

templ NewTaskFormWeek(today time.Time) {
	<form
		id="task-form"
		hx-post="/tasks/week"
		hx-target="#task-form-msg"
		hx-on::after-request="if(event.detail.successful) this.reset()"
		hx-swap-oob="true"
		hx-disabled-elt="#add-task-button"
		class="w-1/5 m-3 bg-flame-surface p-6 h-full rounded flex flex-col justify-center gap-4">
        <h2 class="text-lg font-bold text-center">New tasks</h2>
        <div class="p-3 gap-1">
            <label class="block text-sm mt-2" for="task-name">Task:</label>
            <input
				type="text"
				name="task-name"
				required
				class="w-full p-1 bg-gray-700 rounded text-white"/>
            <label class="block text-sm mt-2" for="task-priority">Priority: </label>
            <select
            	name="task-priority"
            	class="w-full p-1 bg-gray-700 rounded text-white"
             	required
            >
	           	<option value="0">0</option>
	           	<option value="1">1</option>
	           	<option value="2">2</option>
	           	<option value="3">3</option>
            </select>
            <label class="block text-sm mt-2" for="task-date">Date:</label>
            <input
				type="date"
				name="task-date"
				id="task-date"
				value={ fmt.Sprintf("%04d-%02d-%02d", today.Year(), today.Month(), today.Day()) }
				required
				class="w-full p-1 bg-gray-700 rounded text-white"/>
        </div>
		<p class="text-red-400 text-sm" id="task-form-msg"></p>
        <button
        	id="add-task-button"
        	type="submit"
         	class="bg-flame-primary hover:bg-flame-hover disabled:bg-gray-500 cursor-pointer text-white py-2 px-4 rounded">
          Add Task
        </button>
	</form>
}
