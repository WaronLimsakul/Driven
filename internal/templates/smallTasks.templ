package templates

import (
	"github.com/WaronLimsakul/Driven/internal/database"
	tasks "github.com/WaronLimsakul/Driven/internal/task"
	"fmt"
)

func getSmallTaskClass(priority int32) string {
	colors := [4]string{
		"bg-gray-800 hover:bg-gray-700",
		"bg-gray-700 hover:bg-gray-600",
		"bg-flame-dark/80 hover:bg-flame-dark",
		"bg-flame-primary/90 hover:bg-flame-primary",
	}
	return fmt.Sprintf("p-2 rounded %s transition-colors flex gap-2", colors[priority])
}

templ SmallTask(task database.Task) {
	<div id={ task.ID.String() } class={ getSmallTaskClass(task.Priority) }>
		if task.IsDone {
			<input
				type="checkbox"
				class="cursor-pointer"
				hx-put={ fmt.Sprintf("/tasks/week/%s/undone", task.ID.String()) }
				hx-target={ fmt.Sprintf("#%s", tasks.GetWeekDayStr(task.Date)) }
				hx-swap="outerHTML"
				checked/>
		} else {
			<input
				type="checkbox"
				class="cursor-pointer"
				hx-put={ fmt.Sprintf("/tasks/week/%s/done", task.ID.String()) }
				hx-swap="outerHTML"
				hx-target="closest div"
				/>
		}
		<p class="truncate">{task.Name}</p>
	</div>
}

templ SmallTasksColumn(tasks []database.Task, weekDay string) {
	<div id={ weekDay } class="flex flex-col justify-start gap-2">
		if tasks != nil {
			for _, task := range tasks {
				@SmallTask(task)
			}
		}
	</div>
}

templ DoneSmallTaskResponse(task database.Task, weekDay string) {
	// this hx-swap-oob is like telling the browser like it needs to
	// be swapped but not at the target. so we basically we can
	// many things at once using this attribute.
	<div hx-swap-oob={ fmt.Sprintf("beforeend:#%s", weekDay)} >
		<div
			id={ task.ID.String() }
			class={ getSmallTaskClass(task.Priority) }>
			<input
				type="checkbox"
				class="cursor-pointer"
				hx-put={ fmt.Sprintf("/tasks/week/%s/undone", task.ID.String()) }
				hx-target={ fmt.Sprintf("#%s", tasks.GetWeekDayStr(task.Date)) }
				hx-swap="outerHTML"
				checked/>
			<p>{task.Name}</p>
		</div>
	</div>
}
